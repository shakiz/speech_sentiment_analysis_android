// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_config.proto

package com.google.logging.v2;

public interface ListSinksResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.logging.v2.ListSinksResponse)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * A list of sinks.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogSink sinks = 1;</code>
   */
  java.util.List<com.google.logging.v2.LogSink> 
      getSinksList();
  /**
   * <pre>
   * A list of sinks.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogSink sinks = 1;</code>
   */
  com.google.logging.v2.LogSink getSinks(int index);
  /**
   * <pre>
   * A list of sinks.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogSink sinks = 1;</code>
   */
  int getSinksCount();

  /**
   * <pre>
   * If there are more results than were returned, then `nextPageToken` is
   * given a value in the response.  To get the next batch of results, call this
   * method again using the value of `nextPageToken` as `pageToken`.
   * </pre>
   *
   * <code>optional string next_page_token = 2;</code>
   */
  java.lang.String getNextPageToken();
  /**
   * <pre>
   * If there are more results than were returned, then `nextPageToken` is
   * given a value in the response.  To get the next batch of results, call this
   * method again using the value of `nextPageToken` as `pageToken`.
   * </pre>
   *
   * <code>optional string next_page_token = 2;</code>
   */
  com.google.protobuf.ByteString
      getNextPageTokenBytes();
}
