// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto

package com.google.logging.v2;

/**
 * <pre>
 * The parameters to WriteLogEntries.
 * </pre>
 *
 * Protobuf type {@code google.logging.v2.WriteLogEntriesRequest}
 */
public  final class WriteLogEntriesRequest extends
    com.google.protobuf.GeneratedMessageLite<
        WriteLogEntriesRequest, WriteLogEntriesRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:google.logging.v2.WriteLogEntriesRequest)
    WriteLogEntriesRequestOrBuilder {
  private WriteLogEntriesRequest() {
    logName_ = "";
    entries_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int LOG_NAME_FIELD_NUMBER = 1;
  private java.lang.String logName_;
  /**
   * <pre>
   * Optional. A default log resource name for those log entries in `entries`
   * that do not specify their own `logName`.  Example:
   * `"projects/my-project/logs/syslog"`.  See
   * [LogEntry][google.logging.v2.LogEntry].
   * </pre>
   *
   * <code>optional string log_name = 1;</code>
   */
  public java.lang.String getLogName() {
    return logName_;
  }
  /**
   * <pre>
   * Optional. A default log resource name for those log entries in `entries`
   * that do not specify their own `logName`.  Example:
   * `"projects/my-project/logs/syslog"`.  See
   * [LogEntry][google.logging.v2.LogEntry].
   * </pre>
   *
   * <code>optional string log_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getLogNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(logName_);
  }
  /**
   * <pre>
   * Optional. A default log resource name for those log entries in `entries`
   * that do not specify their own `logName`.  Example:
   * `"projects/my-project/logs/syslog"`.  See
   * [LogEntry][google.logging.v2.LogEntry].
   * </pre>
   *
   * <code>optional string log_name = 1;</code>
   */
  private void setLogName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    logName_ = value;
  }
  /**
   * <pre>
   * Optional. A default log resource name for those log entries in `entries`
   * that do not specify their own `logName`.  Example:
   * `"projects/my-project/logs/syslog"`.  See
   * [LogEntry][google.logging.v2.LogEntry].
   * </pre>
   *
   * <code>optional string log_name = 1;</code>
   */
  private void clearLogName() {
    
    logName_ = getDefaultInstance().getLogName();
  }
  /**
   * <pre>
   * Optional. A default log resource name for those log entries in `entries`
   * that do not specify their own `logName`.  Example:
   * `"projects/my-project/logs/syslog"`.  See
   * [LogEntry][google.logging.v2.LogEntry].
   * </pre>
   *
   * <code>optional string log_name = 1;</code>
   */
  private void setLogNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    logName_ = value.toStringUtf8();
  }

  public static final int RESOURCE_FIELD_NUMBER = 2;
  private com.google.api.MonitoredResource resource_;
  /**
   * <pre>
   * Optional. A default monitored resource for those log entries in `entries`
   * that do not specify their own `resource`.
   * </pre>
   *
   * <code>optional .google.api.MonitoredResource resource = 2;</code>
   */
  public boolean hasResource() {
    return resource_ != null;
  }
  /**
   * <pre>
   * Optional. A default monitored resource for those log entries in `entries`
   * that do not specify their own `resource`.
   * </pre>
   *
   * <code>optional .google.api.MonitoredResource resource = 2;</code>
   */
  public com.google.api.MonitoredResource getResource() {
    return resource_ == null ? com.google.api.MonitoredResource.getDefaultInstance() : resource_;
  }
  /**
   * <pre>
   * Optional. A default monitored resource for those log entries in `entries`
   * that do not specify their own `resource`.
   * </pre>
   *
   * <code>optional .google.api.MonitoredResource resource = 2;</code>
   */
  private void setResource(com.google.api.MonitoredResource value) {
    if (value == null) {
      throw new NullPointerException();
    }
    resource_ = value;
    
    }
  /**
   * <pre>
   * Optional. A default monitored resource for those log entries in `entries`
   * that do not specify their own `resource`.
   * </pre>
   *
   * <code>optional .google.api.MonitoredResource resource = 2;</code>
   */
  private void setResource(
      com.google.api.MonitoredResource.Builder builderForValue) {
    resource_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Optional. A default monitored resource for those log entries in `entries`
   * that do not specify their own `resource`.
   * </pre>
   *
   * <code>optional .google.api.MonitoredResource resource = 2;</code>
   */
  private void mergeResource(com.google.api.MonitoredResource value) {
    if (resource_ != null &&
        resource_ != com.google.api.MonitoredResource.getDefaultInstance()) {
      resource_ =
        com.google.api.MonitoredResource.newBuilder(resource_).mergeFrom(value).buildPartial();
    } else {
      resource_ = value;
    }
    
  }
  /**
   * <pre>
   * Optional. A default monitored resource for those log entries in `entries`
   * that do not specify their own `resource`.
   * </pre>
   *
   * <code>optional .google.api.MonitoredResource resource = 2;</code>
   */
  private void clearResource() {  resource_ = null;
    
  }

  public static final int LABELS_FIELD_NUMBER = 3;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> labels_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetLabels() {
    return labels_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableLabels() {
    if (!labels_.isMutable()) {
      labels_ = labels_.mutableCopy();
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().size();
  }
  /**
   * <pre>
   * Optional. User-defined `key:value` items that are added to
   * the `labels` field of each log entry in `entries`, except when a log
   * entry specifies its own `key:value` item with the same key.
   * Example: `{ "size": "large", "color":"red" }`
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */

  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLabels().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * Optional. User-defined `key:value` items that are added to
   * the `labels` field of each log entry in `entries`, except when a log
   * entry specifies its own `key:value` item with the same key.
   * Example: `{ "size": "large", "color":"red" }`
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetLabels());
  }
  /**
   * <pre>
   * Optional. User-defined `key:value` items that are added to
   * the `labels` field of each log entry in `entries`, except when a log
   * entry specifies its own `key:value` item with the same key.
   * Example: `{ "size": "large", "color":"red" }`
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Optional. User-defined `key:value` items that are added to
   * the `labels` field of each log entry in `entries`, except when a log
   * entry specifies its own `key:value` item with the same key.
   * Example: `{ "size": "large", "color":"red" }`
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Optional. User-defined `key:value` items that are added to
   * the `labels` field of each log entry in `entries`, except when a log
   * entry specifies its own `key:value` item with the same key.
   * Example: `{ "size": "large", "color":"red" }`
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableLabelsMap() {
    return internalGetMutableLabels();
  }

  public static final int ENTRIES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<com.google.logging.v2.LogEntry> entries_;
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  public java.util.List<com.google.logging.v2.LogEntry> getEntriesList() {
    return entries_;
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  public java.util.List<? extends com.google.logging.v2.LogEntryOrBuilder> 
      getEntriesOrBuilderList() {
    return entries_;
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  public int getEntriesCount() {
    return entries_.size();
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  public com.google.logging.v2.LogEntry getEntries(int index) {
    return entries_.get(index);
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  public com.google.logging.v2.LogEntryOrBuilder getEntriesOrBuilder(
      int index) {
    return entries_.get(index);
  }
  private void ensureEntriesIsMutable() {
    if (!entries_.isModifiable()) {
      entries_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(entries_);
     }
  }

  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void setEntries(
      int index, com.google.logging.v2.LogEntry value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureEntriesIsMutable();
    entries_.set(index, value);
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void setEntries(
      int index, com.google.logging.v2.LogEntry.Builder builderForValue) {
    ensureEntriesIsMutable();
    entries_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void addEntries(com.google.logging.v2.LogEntry value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureEntriesIsMutable();
    entries_.add(value);
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void addEntries(
      int index, com.google.logging.v2.LogEntry value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureEntriesIsMutable();
    entries_.add(index, value);
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void addEntries(
      com.google.logging.v2.LogEntry.Builder builderForValue) {
    ensureEntriesIsMutable();
    entries_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void addEntries(
      int index, com.google.logging.v2.LogEntry.Builder builderForValue) {
    ensureEntriesIsMutable();
    entries_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void addAllEntries(
      java.lang.Iterable<? extends com.google.logging.v2.LogEntry> values) {
    ensureEntriesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, entries_);
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void clearEntries() {
    entries_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Required. The log entries to write. The log entries must have values for
   * all required fields.
   * </pre>
   *
   * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
   */
  private void removeEntries(int index) {
    ensureEntriesIsMutable();
    entries_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!logName_.isEmpty()) {
      output.writeString(1, getLogName());
    }
    if (resource_ != null) {
      output.writeMessage(2, getResource());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().entrySet()) {
      LabelsDefaultEntryHolder.defaultEntry.serializeTo(
          output, 3, entry.getKey(), entry.getValue());
    }
    for (int i = 0; i < entries_.size(); i++) {
      output.writeMessage(4, entries_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!logName_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getLogName());
    }
    if (resource_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getResource());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().entrySet()) {
      size += LabelsDefaultEntryHolder.defaultEntry.computeMessageSize(
        3, entry.getKey(), entry.getValue());
    }
    for (int i = 0; i < entries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, entries_.get(i));
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.logging.v2.WriteLogEntriesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.logging.v2.WriteLogEntriesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * The parameters to WriteLogEntries.
   * </pre>
   *
   * Protobuf type {@code google.logging.v2.WriteLogEntriesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.logging.v2.WriteLogEntriesRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.logging.v2.WriteLogEntriesRequest)
      com.google.logging.v2.WriteLogEntriesRequestOrBuilder {
    // Construct using com.google.logging.v2.WriteLogEntriesRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Optional. A default log resource name for those log entries in `entries`
     * that do not specify their own `logName`.  Example:
     * `"projects/my-project/logs/syslog"`.  See
     * [LogEntry][google.logging.v2.LogEntry].
     * </pre>
     *
     * <code>optional string log_name = 1;</code>
     */
    public java.lang.String getLogName() {
      return instance.getLogName();
    }
    /**
     * <pre>
     * Optional. A default log resource name for those log entries in `entries`
     * that do not specify their own `logName`.  Example:
     * `"projects/my-project/logs/syslog"`.  See
     * [LogEntry][google.logging.v2.LogEntry].
     * </pre>
     *
     * <code>optional string log_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLogNameBytes() {
      return instance.getLogNameBytes();
    }
    /**
     * <pre>
     * Optional. A default log resource name for those log entries in `entries`
     * that do not specify their own `logName`.  Example:
     * `"projects/my-project/logs/syslog"`.  See
     * [LogEntry][google.logging.v2.LogEntry].
     * </pre>
     *
     * <code>optional string log_name = 1;</code>
     */
    public Builder setLogName(
        java.lang.String value) {
      copyOnWrite();
      instance.setLogName(value);
      return this;
    }
    /**
     * <pre>
     * Optional. A default log resource name for those log entries in `entries`
     * that do not specify their own `logName`.  Example:
     * `"projects/my-project/logs/syslog"`.  See
     * [LogEntry][google.logging.v2.LogEntry].
     * </pre>
     *
     * <code>optional string log_name = 1;</code>
     */
    public Builder clearLogName() {
      copyOnWrite();
      instance.clearLogName();
      return this;
    }
    /**
     * <pre>
     * Optional. A default log resource name for those log entries in `entries`
     * that do not specify their own `logName`.  Example:
     * `"projects/my-project/logs/syslog"`.  See
     * [LogEntry][google.logging.v2.LogEntry].
     * </pre>
     *
     * <code>optional string log_name = 1;</code>
     */
    public Builder setLogNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLogNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Optional. A default monitored resource for those log entries in `entries`
     * that do not specify their own `resource`.
     * </pre>
     *
     * <code>optional .google.api.MonitoredResource resource = 2;</code>
     */
    public boolean hasResource() {
      return instance.hasResource();
    }
    /**
     * <pre>
     * Optional. A default monitored resource for those log entries in `entries`
     * that do not specify their own `resource`.
     * </pre>
     *
     * <code>optional .google.api.MonitoredResource resource = 2;</code>
     */
    public com.google.api.MonitoredResource getResource() {
      return instance.getResource();
    }
    /**
     * <pre>
     * Optional. A default monitored resource for those log entries in `entries`
     * that do not specify their own `resource`.
     * </pre>
     *
     * <code>optional .google.api.MonitoredResource resource = 2;</code>
     */
    public Builder setResource(com.google.api.MonitoredResource value) {
      copyOnWrite();
      instance.setResource(value);
      return this;
      }
    /**
     * <pre>
     * Optional. A default monitored resource for those log entries in `entries`
     * that do not specify their own `resource`.
     * </pre>
     *
     * <code>optional .google.api.MonitoredResource resource = 2;</code>
     */
    public Builder setResource(
        com.google.api.MonitoredResource.Builder builderForValue) {
      copyOnWrite();
      instance.setResource(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Optional. A default monitored resource for those log entries in `entries`
     * that do not specify their own `resource`.
     * </pre>
     *
     * <code>optional .google.api.MonitoredResource resource = 2;</code>
     */
    public Builder mergeResource(com.google.api.MonitoredResource value) {
      copyOnWrite();
      instance.mergeResource(value);
      return this;
    }
    /**
     * <pre>
     * Optional. A default monitored resource for those log entries in `entries`
     * that do not specify their own `resource`.
     * </pre>
     *
     * <code>optional .google.api.MonitoredResource resource = 2;</code>
     */
    public Builder clearResource() {  copyOnWrite();
      instance.clearResource();
      return this;
    }


    public int getLabelsCount() {
      return instance.getLabelsMap().size();
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return instance.getLabelsMap().containsKey(key);
    }

    public Builder clearLabels() {
      copyOnWrite();
      instance.getMutableLabelsMap().clear();
      return this;
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableLabelsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getLabelsMap());
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getLabelsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getLabelsMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableLabelsMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Optional. User-defined `key:value` items that are added to
     * the `labels` field of each log entry in `entries`, except when a log
     * entry specifies its own `key:value` item with the same key.
     * Example: `{ "size": "large", "color":"red" }`
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableLabelsMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public java.util.List<com.google.logging.v2.LogEntry> getEntriesList() {
      return java.util.Collections.unmodifiableList(
          instance.getEntriesList());
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public int getEntriesCount() {
      return instance.getEntriesCount();
    }/**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public com.google.logging.v2.LogEntry getEntries(int index) {
      return instance.getEntries(index);
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder setEntries(
        int index, com.google.logging.v2.LogEntry value) {
      copyOnWrite();
      instance.setEntries(index, value);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder setEntries(
        int index, com.google.logging.v2.LogEntry.Builder builderForValue) {
      copyOnWrite();
      instance.setEntries(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder addEntries(com.google.logging.v2.LogEntry value) {
      copyOnWrite();
      instance.addEntries(value);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder addEntries(
        int index, com.google.logging.v2.LogEntry value) {
      copyOnWrite();
      instance.addEntries(index, value);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder addEntries(
        com.google.logging.v2.LogEntry.Builder builderForValue) {
      copyOnWrite();
      instance.addEntries(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder addEntries(
        int index, com.google.logging.v2.LogEntry.Builder builderForValue) {
      copyOnWrite();
      instance.addEntries(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder addAllEntries(
        java.lang.Iterable<? extends com.google.logging.v2.LogEntry> values) {
      copyOnWrite();
      instance.addAllEntries(values);
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder clearEntries() {
      copyOnWrite();
      instance.clearEntries();
      return this;
    }
    /**
     * <pre>
     * Required. The log entries to write. The log entries must have values for
     * all required fields.
     * </pre>
     *
     * <code>repeated .google.logging.v2.LogEntry entries = 4;</code>
     */
    public Builder removeEntries(int index) {
      copyOnWrite();
      instance.removeEntries(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.logging.v2.WriteLogEntriesRequest)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.logging.v2.WriteLogEntriesRequest();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        labels_.makeImmutable();
        entries_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.logging.v2.WriteLogEntriesRequest other = (com.google.logging.v2.WriteLogEntriesRequest) arg1;
        logName_ = visitor.visitString(!logName_.isEmpty(), logName_,
            !other.logName_.isEmpty(), other.logName_);
        resource_ = visitor.visitMessage(resource_, other.resource_);
        labels_ = visitor.visitMap(
            labels_, other.internalGetLabels());
        entries_= visitor.visitList(entries_, other.entries_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                logName_ = s;
                break;
              }
              case 18: {
                com.google.api.MonitoredResource.Builder subBuilder = null;
                if (resource_ != null) {
                  subBuilder = resource_.toBuilder();
                }
                resource_ = input.readMessage(com.google.api.MonitoredResource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(resource_);
                  resource_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                if (!labels_.isMutable()) {
                  labels_ = labels_.mutableCopy();
                }
                LabelsDefaultEntryHolder.defaultEntry.parseInto(labels_, input, extensionRegistry);  break;
              }
              case 34: {
                if (!entries_.isModifiable()) {
                  entries_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(entries_);
                }
                entries_.add(
                    input.readMessage(com.google.logging.v2.LogEntry.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.logging.v2.WriteLogEntriesRequest.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.logging.v2.WriteLogEntriesRequest)
  private static final com.google.logging.v2.WriteLogEntriesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new WriteLogEntriesRequest();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.logging.v2.WriteLogEntriesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WriteLogEntriesRequest> PARSER;

  public static com.google.protobuf.Parser<WriteLogEntriesRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

